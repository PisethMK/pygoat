name: SonarQube SAST Scan

on:
  push:
    branches: [ "master", "main" ]
  pull_request:      # ðŸ‘ˆ also run on PRs so developers see results inline
  workflow_dispatch:

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

jobs:
  sonarqube:
    name: SonarQube Analysis
    runs-on: self-hosted   # your self-hosted runner
    
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Install Sonar Scanner
        run: |
          if [ ! -d "/home/appserver/sonar-scanner-7.2.0.5079-linux-x64" ]; then
            echo "SonarQube Scanner not found. Installing..."
            wget -q https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-7.2.0.5079-linux-x64.zip -O /tmp/sonar-scanner.zip
            unzip /tmp/sonar-scanner.zip -d /home/appserver/
          else
            echo "SonarQube Scanner already installed. Skipping download."
          fi
        shell: bash

      - name: Run SonarQube Scan
        run: |
          export PATH=$PATH:/home/appserver/sonar-scanner-7.2.0.5079-linux-x64/bin
          sonar-scanner \
            -Dsonar.projectKey=pygoat \
            -Dsonar.projectName=pygoat \
            -Dsonar.projectVersion=1.0 \
            -Dsonar.sources=./ \
            -Dsonar.test.inclusions=./ \
            -Dsonar.sourceEncoding=UTF-8 \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.token=$SONAR_TOKEN \
            -Dsonar.python.version=3.8

      - name: Fetch SonarQube issues
        run: |
          curl -v --request GET \
            --url "$SONAR_HOST_URL/api/issues/search?componentKeys=nodemultiplayersnake" \
            -u "$SONAR_TOKEN:" \
            -o sonar-report.json

      - name: Upload SonarQube Json report
        uses: actions/upload-artifact@v4
        with:
          name: sonar-json-report
          path: sonar-report.json
