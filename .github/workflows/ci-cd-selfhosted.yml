name: CI-CD DevSecOps (Python API -> Docker -> Self-Hosted VM)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  security-events: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PYTHON_VERSION: "3.12"
  APP_DIR: "api"

jobs:
  checks:
    name: Quality & Security Checks
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        working-directory: ${{ env.APP_DIR }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest bandit pip-audit

      - name: Unit tests
        working-directory: ${{ env.APP_DIR }}
        run: |
          if ls tests 1> /dev/null 2>&1; then
            pytest -q
          else
            echo "No tests/ directory found; skipping."
          fi

      - name: Bandit (SAST)
        run: bandit -r ${{ env.APP_DIR }} -f sarif -o bandit.sarif || true
      - name: Upload Bandit SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: bandit.sarif

      - name: pip-audit
        working-directory: ${{ env.APP_DIR }}
        run: pip-audit -r requirements.txt -f sarif -o ../pip-audit.sarif || true
      - name: Upload pip-audit SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: pip-audit.sarif

      - name: Hadolint
        run: hadolint Dockerfile || true

  build-deploy:
    name: Build, Scan & Deploy on Self-Hosted Runner
    runs-on: self-hosted
    needs: checks
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest .

      - name: Trivy Scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          format: sarif
          output: trivy.sarif
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
      - name: Upload Trivy SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy.sarif

      - name: Push Docker image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Deploy with docker-compose
        run: |
          cd /opt/myapp
          docker compose pull api
          docker compose up -d --no-deps api
          docker image prune -f
